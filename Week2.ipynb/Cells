# Step 1: Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 2: Load dataset
file_path = r"C:\Users\S\Documents\Internship\Shell\Week1\data.csv"
df = pd.read_csv(file_path)

# Step 3: Data cleaning
df['Date'] = pd.to_datetime(df['Date'], errors='coerce')
df['Year'] = df['Date'].dt.year
df = df.dropna()   # drop missing rows for ML

# Step 4: Features (X) and Target (y)
X = df[['Salinity (ppt)', 'pH', 'SecchiDepth (m)', 'WaterDepth (m)', 'WaterTemp (C)', 'AirTemp (C)']]
y = df['DissolvedOxygen (mg/L)']

# Step 5: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 6: Model Training
model = LinearRegression()
model.fit(X_train, y_train)

# Step 7: Predictions
y_pred = model.predict(X_test)

# Step 8: Evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Model Evaluation:")
print("Mean Squared Error (MSE):", mse)
print("RÂ² Score:", r2)

# Step 9: Plot actual vs predicted
plt.figure(figsize=(8,6))
plt.scatter(y_test, y_pred, alpha=0.7)
plt.xlabel("Actual Dissolved Oxygen")
plt.ylabel("Predicted Dissolved Oxygen")
plt.title("Actual vs Predicted Dissolved Oxygen")
plt.grid(True)
plt.show()
